#!/usr/bin/env node

// npm dependencies
var program = require("nomnom"),
    Trello  = require("node-trello"),
    config  = require("nconf"),
    fs      = require("fs"),
    __dirname;

// Load config
config.file(__dirname + "/../config.json");

// ./lib depedencies
var logger = require("../lib/logger"),
    output = require("../lib/output");

// Things we need to get up and running
var Authentication = require("../src/authenticate")(logger, output, config);
var translator = require("../src/translator")(logger, config);

program.script("trello");
program.nocolors();
logger.debug("Starting trello-cli");

// Make sure config.json exists
if (!fs.existsSync(__dirname + "/../config.json")){
  logger.emerg("config.json does not exist");
  process.exit(1);
}

// Hacky, but it'll do for now
if (process.argv[2] == 'set-auth'){
  Authentication.setToken(process.argv[3]);
} else {
  // Make sure we have an API key etc
  Authentication.check();

  // Set up Trello
  var trello = new Trello(config.get("appKey"), Authentication.getToken());

  // Then register our commands
  var commands = fs.readdirSync(__dirname + "/../src/commands");
  commands.forEach(function(command){
    require("../src/commands/" + command)(program, output, logger, config, trello, translator);
  });
}

// Handle the case when there's no command
program.nocommand().callback(function(){
  output.emphasis("Trello CLI");
  output.normal("Welcome to Trello CLI! To get started, run:");
  output.normal("trello --help");
});
program.printer(function(line){
    logger.warning(line.trim());
    process.exit(1);
});

program.parse();
